name: Node.js Production CI Pipeline

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm

      - name: Install Dependencies
        run: npm ci

      - name: Run ESLint Quality Check
        run: npx eslint . --max-warnings=0

      - name: Snyk Dependency Scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Snyk Security Test
        run: npx snyk test
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=emmauopeople
            -Dsonar.projectKey=emmauopeople_sgfb-project
            -Dsonar.sources=.
            -Dsonar.host.url=https://sonarcloud.io

      - name: Start Apps with PM2 for ZAP Scan
        run: |
          npm install pm2 -g
          pm2 start app.js --name admin
          pm2 start customer_app.js --name customer
          sleep 20

      - name: OWASP ZAP Scan (Admin)
        uses: zaproxy/action-full-scan@v0.8.0
        with:
          target: "http://localhost:3000"
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
        continue-on-error: true

      - name: OWASP ZAP Scan (Customer)
        uses: zaproxy/action-full-scan@v0.8.0
        with:
          target: "http://localhost:3001"
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
        continue-on-error: true

      - name: Stop PM2 Apps After ZAP
        run: pm2 stop all && pm2 delete all

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm

      - name: Install Dependencies
        run: npm ci

      - name: Run Tests with Jest and Coverage
        run: |
          npm test
          npm run coverage-check || true

  notify:
    needs: [build, test]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Slack Notification
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": ":rocket: *SGFB CI/CD Status*",
              "attachments": [
                {
                  "color": "${{ needs.test.result == 'success' && '#36a64f' || '#FF0000' }}",
                  "fields": [
                    { "title": "Build Status", "value": "${{ needs.build.result }}", "short": true },
                    { "title": "Test Status", "value": "${{ needs.test.result }}", "short": true },
                    { "title": "Branch", "value": "${{ github.ref_name }}", "short": true },
                    { "title": "Commit by", "value": "${{ github.actor }}", "short": true }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
